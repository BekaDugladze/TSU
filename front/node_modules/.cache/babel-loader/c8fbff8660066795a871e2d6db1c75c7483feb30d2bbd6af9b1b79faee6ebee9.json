{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x\\\\Desktop\\\\Portfolio\\\\TSU\\\\front\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Register from './Resources/register';\nimport FirstPage from './Resources/starting';\nimport Account from './Resources/account';\nimport './App.css';\n\n// Your authentication logic (e.g., a function that checks if the user is authenticated)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isAuthenticated() {\n  // Check if a session ID exists in your session storage\n  // Replace 'session-id-key' with the actual key you use to store the session ID.\n  const sessionID = sessionStorage.getItem('session-id-key');\n\n  // Return true if the session ID exists (user is authenticated), false otherwise.\n  return !!sessionID;\n}\n\n// Custom ProtectedRoute component\nfunction ProtectedRoute({\n  element,\n  ...rest\n}) {\n  if (isAuthenticated()) {\n    return /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  } else {\n    // Redirect to the login page if not authenticated\n    return /*#__PURE__*/_jsxDEV(FirstPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n}\n_c = ProtectedRoute;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(FirstPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/account\",\n        element: /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Register","FirstPage","Account","jsxDEV","_jsxDEV","isAuthenticated","sessionID","sessionStorage","getItem","ProtectedRoute","element","rest","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","children","path","_c2","$RefreshReg$"],"sources":["C:/Users/x/Desktop/Portfolio/TSU/front/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Register from './Resources/register';\nimport FirstPage from './Resources/starting';\nimport Account from './Resources/account';\nimport './App.css';\n\n// Your authentication logic (e.g., a function that checks if the user is authenticated)\nfunction isAuthenticated() {\n  // Check if a session ID exists in your session storage\n  // Replace 'session-id-key' with the actual key you use to store the session ID.\n  const sessionID = sessionStorage.getItem('session-id-key');\n\n  // Return true if the session ID exists (user is authenticated), false otherwise.\n  return !!sessionID;\n}\n\n\n// Custom ProtectedRoute component\nfunction ProtectedRoute({ element, ...rest }) {\n  if (isAuthenticated()) {\n    return <Account />;\n  } else {\n    // Redirect to the login page if not authenticated\n    return <FirstPage />;\n  }\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<FirstPage />} />\n        <Route path=\"/register\" element={<Register />} />\n        <ProtectedRoute path=\"/account\" element={<Account />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,eAAeA,CAAA,EAAG;EACzB;EACA;EACA,MAAMC,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAC;;EAE1D;EACA,OAAO,CAAC,CAACF,SAAS;AACpB;;AAGA;AACA,SAASG,cAAcA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,EAAE;EAC5C,IAAIN,eAAe,CAAC,CAAC,EAAE;IACrB,oBAAOD,OAAA,CAACF,OAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB,CAAC,MAAM;IACL;IACA,oBAAOX,OAAA,CAACH,SAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;AACF;AAACC,EAAA,GAPQP,cAAc;AASvB,SAASQ,GAAGA,CAAA,EAAG;EACb,oBACEb,OAAA,CAACP,MAAM;IAAAqB,QAAA,eACLd,OAAA,CAACN,MAAM;MAAAoB,QAAA,gBACLd,OAAA,CAACL,KAAK;QAACoB,IAAI,EAAC,GAAG;QAACT,OAAO,eAAEN,OAAA,CAACH,SAAS;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1CX,OAAA,CAACL,KAAK;QAACoB,IAAI,EAAC,WAAW;QAACT,OAAO,eAAEN,OAAA,CAACJ,QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDX,OAAA,CAACK,cAAc;QAACU,IAAI,EAAC,UAAU;QAACT,OAAO,eAAEN,OAAA,CAACF,OAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACK,GAAA,GAVQH,GAAG;AAYZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}