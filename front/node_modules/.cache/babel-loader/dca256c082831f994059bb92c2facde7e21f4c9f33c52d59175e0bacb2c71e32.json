{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x\\\\Desktop\\\\Portfolio\\\\TSU\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Register from './Resources/register';\nimport FirstPage from './Resources/starting';\nimport Account from './Resources/account';\nimport './App.css';\nimport { useEffect } from 'react';\n\n// Custom hook to check authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isAuthenticated() {\n  _s();\n  const [auth, setAuth] = useState(false);\n  useEffect(() => {\n    // Check if a session ID exists in your session storage\n    const sessionID = sessionStorage.getItem('session-id-key');\n\n    // Update the auth state based on whether the session ID exists\n    setAuth(true);\n  }, []);\n  return auth;\n}\n_s(isAuthenticated, \"7dXJltoL392rVm1xFgcdCG4Y7Dw=\");\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(FirstPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/account\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 59\n        }, this) : /*#__PURE__*/_jsxDEV(FirstPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Register","FirstPage","Account","useEffect","jsxDEV","_jsxDEV","isAuthenticated","_s","auth","setAuth","sessionID","sessionStorage","getItem","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/x/Desktop/Portfolio/TSU/front/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Register from './Resources/register';\nimport FirstPage from './Resources/starting';\nimport Account from './Resources/account';\nimport './App.css';\nimport { useEffect } from 'react';\n\n// Custom hook to check authentication\nfunction isAuthenticated() {\n  const [auth, setAuth] = useState(false);\n\n  useEffect(() => {\n    // Check if a session ID exists in your session storage\n    const sessionID = sessionStorage.getItem('session-id-key');\n\n    // Update the auth state based on whether the session ID exists\n    setAuth(true);\n  }, []);\n\n  return auth;\n}\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<FirstPage />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/account\" element={isAuthenticated ? <Account /> : <FirstPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEvCQ,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAC;;IAE1D;IACAH,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOD,IAAI;AACb;AAACD,EAAA,CAZQD,eAAe;AAgBxB,SAASO,GAAGA,CAAA,EAAG;EACb,oBACER,OAAA,CAACR,MAAM;IAAAiB,QAAA,eACLT,OAAA,CAACP,MAAM;MAAAgB,QAAA,gBACLT,OAAA,CAACN,KAAK;QAACgB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEX,OAAA,CAACJ,SAAS;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1Cf,OAAA,CAACN,KAAK;QAACgB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEX,OAAA,CAACL,QAAQ;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDf,OAAA,CAACN,KAAK;QAACgB,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEV,eAAe,gBAAGD,OAAA,CAACH,OAAO;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGf,OAAA,CAACJ,SAAS;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACC,EAAA,GAVQR,GAAG;AAYZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}