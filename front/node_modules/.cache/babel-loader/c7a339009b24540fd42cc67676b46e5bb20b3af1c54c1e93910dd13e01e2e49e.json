{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x\\\\Desktop\\\\Portfolio\\\\TSU\\\\front\\\\src\\\\Resources\\\\accountGuard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Account from './account';\nimport FirstPage from \"./starting\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountGuard() {\n  _s();\n  const API_URL = 'http://localhost:3002/login';\n  fetch(API_URL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  if (isAuthenticated) {\n    // User is authenticated, render the protected route\n    return /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this);\n  } else {\n    // User is not authenticated, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(FirstPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this);\n  }\n}\n_s(AccountGuard, \"Tis/laFBs1mUsdamrhCn/+4kssg=\", false, function () {\n  return [useSelector];\n});\n_c = AccountGuard;\nexport default AccountGuard;\nvar _c;\n$RefreshReg$(_c, \"AccountGuard\");","map":{"version":3,"names":["React","Account","FirstPage","useState","useEffect","useSelector","jsxDEV","_jsxDEV","AccountGuard","_s","API_URL","fetch","method","headers","isAuthenticated","state","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/x/Desktop/Portfolio/TSU/front/src/Resources/accountGuard.js"],"sourcesContent":["import React from \"react\";\r\nimport Account from './account'\r\nimport FirstPage from \"./starting\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AccountGuard() {\r\n    const API_URL = 'http://localhost:3002/login'; \r\n\r\n    fetch(API_URL, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    const isAuthenticated = useSelector((state) => state.isAuthenticated);\r\n\r\n    if (isAuthenticated) {\r\n      // User is authenticated, render the protected route\r\n      return <Account />;\r\n    } else {\r\n      // User is not authenticated, redirect to the login page\r\n      return <FirstPage />;\r\n    }\r\n  }\r\n\r\n\r\nexport default AccountGuard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAG,6BAA6B;EAE7CC,KAAK,CAACD,OAAO,EAAE;IACbE,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,MAAMC,eAAe,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACD,eAAe,CAAC;EAErE,IAAIA,eAAe,EAAE;IACnB;IACA,oBAAOP,OAAA,CAACN,OAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB,CAAC,MAAM;IACL;IACA,oBAAOZ,OAAA,CAACL,SAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;AACF;AAACV,EAAA,CAlBMD,YAAY;EAAA,QASOH,WAAW;AAAA;AAAAe,EAAA,GAT9BZ,YAAY;AAqBrB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}