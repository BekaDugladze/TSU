{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x\\\\Desktop\\\\Portfolio\\\\TSU\\\\front\\\\src\\\\Resources\\\\account\\\\leftNavBar.js\";\nimport React from 'react';\nimport \"./css/leftNavBar.css\";\nimport { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class LeftNavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleDivVisibility = () => {\n      this.setState(prevState => ({\n        isDivVisible: !prevState.isDivVisible\n      }));\n    };\n    this.handleResize = () => {\n      // Get the current screen width\n      const screenWidth = window.innerWidth;\n\n      // Check if the screen width is greater than 1000px, and if so, set isDivVisible to true\n      if (screenWidth > 1000) {\n        this.setState({\n          isDivVisible: true\n        });\n      }\n    };\n    this.state = {\n      isDivVisible: false\n    };\n  }\n  componentDidMount() {\n    // Add an event listener to check for screen width changes\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n  }\n  componentWillUnmount() {\n    // Remove the event listener when the component unmounts\n    window.removeEventListener('resize', this.handleResize);\n  }\n  render() {\n    const {\n      isDivVisible\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftNavBar\",\n      style: divStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"importantHead\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"\",\n              children: \"Study Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"\",\n              children: \"Financial Condition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"\",\n              children: \"Course Registration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"\",\n              children: \"Program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"\",\n              children: \"Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"\",\n              children: \"Inner Mobility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"\",\n              children: \"Self-Governance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subjectNavBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Subjects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have No subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({\n  isDivVisible: state.isDivVisible\n});","map":{"version":3,"names":["React","Component","NavLink","Connect","jsxDEV","_jsxDEV","LeftNavBar","constructor","props","toggleDivVisibility","setState","prevState","isDivVisible","handleResize","screenWidth","window","innerWidth","state","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","className","style","divStyle","children","to","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps"],"sources":["C:/Users/x/Desktop/Portfolio/TSU/front/src/Resources/account/leftNavBar.js"],"sourcesContent":["import React from 'react';\r\nimport \"./css/leftNavBar.css\";\r\nimport { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Connect } from 'react-redux';\r\n\r\n\r\nexport default class LeftNavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isDivVisible: false,\r\n        };\r\n      }\r\n    \r\n      toggleDivVisibility = () => {\r\n        this.setState((prevState) => ({\r\n          isDivVisible: !prevState.isDivVisible,\r\n        }));\r\n      };\r\n    \r\n      componentDidMount() {\r\n        // Add an event listener to check for screen width changes\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.handleResize();\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        // Remove the event listener when the component unmounts\r\n        window.removeEventListener('resize', this.handleResize);\r\n      }\r\n    \r\n      handleResize = () => {\r\n        // Get the current screen width\r\n        const screenWidth = window.innerWidth;\r\n    \r\n        // Check if the screen width is greater than 1000px, and if so, set isDivVisible to true\r\n        if (screenWidth > 1000) {\r\n          this.setState({ isDivVisible: true });\r\n        }\r\n      };\r\n    render() {\r\n        \r\n        const { isDivVisible } = this.state;\r\n        return (\r\n            <div className='leftNavBar' style={divStyle} >\r\n                <div className='importantHead'>\r\n                    <ul>\r\n                        <li><NavLink to=''>Study Card</NavLink></li>\r\n                        <li><NavLink to=''>Financial Condition</NavLink></li>\r\n                        <li><NavLink to=''>Course Registration</NavLink></li>\r\n                        <li><NavLink to=''>Schedule</NavLink></li>\r\n                        <li><NavLink to=''>Program</NavLink></li>\r\n                        <li><NavLink to=''>Orders</NavLink></li>\r\n                        <li><NavLink to=''>Inner Mobility</NavLink></li>\r\n                        <li><NavLink to=''>Self-Governance</NavLink></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"subjectNavBar\">\r\n                    <h3>Subjects</h3>\r\n                    <p>You have No subject</p>\r\n                    <ul>\r\n                        {/*<li><NavLink to=''>Study Card</NavLink></li>\r\n                        <li><NavLink to=''>Financial Condition</NavLink></li>\r\n                        <li><NavLink to=''>Course Registration</NavLink></li>\r\n                        <li><NavLink to=''>Schedule</NavLink></li>\r\n                        <li><NavLink to=''>Program</NavLink></li>\r\n                        <li><NavLink to=''>Orders</NavLink></li>\r\n                        <li><NavLink to=''>Inner Mobility</NavLink></li>\r\n        <li><NavLink to=''>Self-Governance</NavLink></li>*/}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isDivVisible: state.isDivVisible,\r\n  });"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAC7B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,eAAe,MAAMC,UAAU,SAASL,SAAS,CAAC;EAC9CM,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,mBAAmB,GAAG,MAAM;MAC1B,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;QAC5BC,YAAY,EAAE,CAACD,SAAS,CAACC;MAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,KAaDC,YAAY,GAAG,MAAM;MACnB;MACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU;;MAErC;MACA,IAAIF,WAAW,GAAG,IAAI,EAAE;QACtB,IAAI,CAACJ,QAAQ,CAAC;UAAEE,YAAY,EAAE;QAAK,CAAC,CAAC;MACvC;IACF,CAAC;IA9BC,IAAI,CAACK,KAAK,GAAG;MACXL,YAAY,EAAE;IAChB,CAAC;EACH;EAQAM,iBAAiBA,CAAA,EAAG;IAClB;IACAH,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACN,YAAY,CAAC;IACpD,IAAI,CAACA,YAAY,CAAC,CAAC;EACrB;EAEAO,oBAAoBA,CAAA,EAAG;IACrB;IACAL,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACR,YAAY,CAAC;EACzD;EAWFS,MAAMA,CAAA,EAAG;IAEL,MAAM;MAAEV;IAAa,CAAC,GAAG,IAAI,CAACK,KAAK;IACnC,oBACIZ,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAACC,KAAK,EAAEC,QAAS;MAAAC,QAAA,gBACxCrB,OAAA;QAAKkB,SAAS,EAAC,eAAe;QAAAG,QAAA,eAC1BrB,OAAA;UAAAqB,QAAA,gBACIrB,OAAA;YAAAqB,QAAA,eAAIrB,OAAA,CAACH,OAAO;cAACyB,EAAE,EAAC,EAAE;cAAAD,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5C1B,OAAA;YAAAqB,QAAA,eAAIrB,OAAA,CAACH,OAAO;cAACyB,EAAE,EAAC,EAAE;cAAAD,QAAA,EAAC;YAAmB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrD1B,OAAA;YAAAqB,QAAA,eAAIrB,OAAA,CAACH,OAAO;cAACyB,EAAE,EAAC,EAAE;cAAAD,QAAA,EAAC;YAAmB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrD1B,OAAA;YAAAqB,QAAA,eAAIrB,OAAA,CAACH,OAAO;cAACyB,EAAE,EAAC,EAAE;cAAAD,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1C1B,OAAA;YAAAqB,QAAA,eAAIrB,OAAA,CAACH,OAAO;cAACyB,EAAE,EAAC,EAAE;cAAAD,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzC1B,OAAA;YAAAqB,QAAA,eAAIrB,OAAA,CAACH,OAAO;cAACyB,EAAE,EAAC,EAAE;cAAAD,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxC1B,OAAA;YAAAqB,QAAA,eAAIrB,OAAA,CAACH,OAAO;cAACyB,EAAE,EAAC,EAAE;cAAAD,QAAA,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChD1B,OAAA;YAAAqB,QAAA,eAAIrB,OAAA,CAACH,OAAO;cAACyB,EAAE,EAAC,EAAE;cAAAD,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN1B,OAAA;QAAKkB,SAAS,EAAC,eAAe;QAAAG,QAAA,gBAC1BrB,OAAA;UAAAqB,QAAA,EAAI;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjB1B,OAAA;UAAAqB,QAAA,EAAG;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1B1B,OAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ;AAEA,MAAMC,eAAe,GAAIf,KAAK,KAAM;EAChCL,YAAY,EAAEK,KAAK,CAACL;AACtB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}