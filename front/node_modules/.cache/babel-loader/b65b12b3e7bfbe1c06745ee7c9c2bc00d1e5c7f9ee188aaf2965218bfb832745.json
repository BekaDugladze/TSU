{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x\\\\Desktop\\\\Portfolio\\\\TSU\\\\front\\\\src\\\\Resources\\\\accountGuard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Account from './account';\nimport FirstPage from \"./starting\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function AccountGuard() {\n  _s();\n  const API_URL = 'http://localhost:3002/account';\n  const response = await fetch(API_URL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: \"include\"\n  });\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  if (response.ok) {\n    // User is authenticated, render the protected route\n    return /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this);\n  } else {\n    // User is not authenticated, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(FirstPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  }\n}\n_s(AccountGuard, \"Tis/laFBs1mUsdamrhCn/+4kssg=\", false, function () {\n  return [useSelector];\n});\n_c = AccountGuard;\nexport default AccountGuard;\nvar _c;\n$RefreshReg$(_c, \"AccountGuard\");","map":{"version":3,"names":["React","Account","FirstPage","useState","useEffect","useSelector","jsxDEV","_jsxDEV","AccountGuard","_s","API_URL","response","fetch","method","headers","credentials","isAuthenticated","state","ok","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/x/Desktop/Portfolio/TSU/front/src/Resources/accountGuard.js"],"sourcesContent":["import React from \"react\";\r\nimport Account from './account'\r\nimport FirstPage from \"./starting\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nasync function AccountGuard() {\r\n    const API_URL = 'http://localhost:3002/account'; \r\n\r\n    const response = await fetch(API_URL, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      credentials: \"include\"\r\n    })\r\n    const isAuthenticated = useSelector((state) => state.isAuthenticated);\r\n\r\n    if (response.ok) {\r\n      // User is authenticated, render the protected route\r\n      return <Account />;\r\n    } else {\r\n      // User is not authenticated, redirect to the login page\r\n      return <FirstPage />;\r\n    }\r\n  }\r\n\r\n\r\nexport default AccountGuard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAeC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAG,+BAA+B;EAE/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,EAAE;IACpCG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAMC,eAAe,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACD,eAAe,CAAC;EAErE,IAAIL,QAAQ,CAACO,EAAE,EAAE;IACf;IACA,oBAAOX,OAAA,CAACN,OAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB,CAAC,MAAM;IACL;IACA,oBAAOf,OAAA,CAACL,SAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;AACF;AAACb,EAAA,CAnBYD,YAAY;EAAA,QAUCH,WAAW;AAAA;AAAAkB,EAAA,GAVxBf,YAAY;AAsB3B,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}